--Consultas

--Administrador de VIDEOJUEGOS

SELECT VIDEOJUEGOS.nombre, VIDEOJUEGOS.precio, VIDEOJUEGOS.p_url, CATEGORIAS.nombre, CATEGORIAS.descripcion
FROM VIDEOJUEGOS JOIN VIDEOJUEGOSPORCATEGORIAS ON V_id = VIDEOJUEGOSPORCATEGORIAS.Videojuego 
    JOIN CATEGORIAS ON VIDEOJUEGOSPORCATEGORIAS.Categoria = CATEGORIAS.C_id
ORDER BY (CATEGORIAS.nombre);

--Usuario

SELECT VIDEOJUEGOS.nombre, VIDEOJUEGOS.precio, DLCS.nombre, DLCS.precio, DLCS.etiqueta, DLCS.p_url, DLCS.imagen, DLCS.trailer, DLCS.sinopsis
FROM VIDEOJUEGOS JOIN DLCS ON V_id = Videojuego;

SELECT nombre, precio, etiqueta, p_url, plataforma
FROM VIDEOJUEGOS
WHERE precio < 50000
ORDER BY(precio) DESC;


--Disparadores

CREATE TRIGGER INSERT_FECHA
BEFORE INSERT ON USUARIOS
for EACH ROW
BEGIN
    :NEW.createdAt := CURRENT_TIMESTAMP;
END;
/
CREATE TRIGGER Correo_User
BEFORE UPDATE ON USUARIOS
FOR EACH ROW
BEGIN
    IF:new.correo IS NULL THEN
    :new.correo := :old.correo;
    END IF;
    IF:new.direccion IS NULL THEN
    :new.direccion := :old.direccion;
    END IF;
END ;
/
CREATE OR REPLACE TRIGGER totalCarrito
BEFORE UPDATE ON CARRITOSCOMPRAS
FOR EACH ROW
BEGIN
    :new.subtotal := :old.precioVideojuego + :new.precioVideojuego + :old.dlcPrecio + :new.dlcPrecio;
    :new.total := :new.subtotal*0.18;
END;
/
CREATE TRIGGER correoCarrito
BEFORE INSERT OR UPDATE ON CARRITOSCOMPRAS
FOR EACH ROW
BEGIN
    SELECT correo INTO :new.correoUsuario FROM USUARIOS 
    WHERE :new.CC_id = CarritoCompra;
END;
/
CREATE SEQUENCE IDS
START WITH 000001
INCREMENT BY 1;
/
CREATE TRIGGER CVIDEOJUEGOS_ID
BEFORE INSERT ON VIDEOJUEGOS
for EACH ROW
BEGIN
SELECT IDS.NEXTVAL INTO :NEW.V_id FROM DUAL;
END;
/
CREATE TRIGGER CCATEGORIAS_ID
BEFORE INSERT ON CATEGORIAS
for EACH ROW
BEGIN
SELECT IDS.NEXTVAL INTO :NEW.C_id FROM DUAL;
END;
/
CREATE TRIGGER CPLATAFORMAS_ID
BEFORE INSERT ON PLATAFORMAS
for EACH ROW
BEGIN
SELECT IDS.NEXTVAL INTO :NEW.P_id FROM DUAL;
END;
/
CREATE TRIGGER CUSUARIOS_ID
BEFORE INSERT ON USUARIOS
for EACH ROW
BEGIN
SELECT IDS.NEXTVAL INTO :NEW.U_id FROM DUAL;
END;
/
CREATE TRIGGER CCARRITOSCOMPRAS_ID
BEFORE INSERT ON CARRITOSCOMPRAS
for EACH ROW
BEGIN
SELECT IDS.NEXTVAL INTO :NEW.CC_id FROM DUAL;
END;

--XDispadores

DROP SEQUENCE IDS;
DROP TRIGGER CVIDEOJUEGOS_ID;
DROP TRIGGER CCATEGORIAS_ID;
DROP TRIGGER CPLATAFORMAS_ID;
DROP TRIGGER CUSUARIOS_ID;
DROP TRIGGER CCARRITOSCOMPRAS_ID;
DROP TRIGGER INSERT_FECHA;
DROP TRIGGER Correo_User;
DROP TRIGGER totalCarrito;
DROP TRIGGER correoCarrito;

--XTablas

ALTER TABLE FISICOS DROP CONSTRAINT FK_Fisicos_Videojuegos;

ALTER TABLE DIGITALES DROP CONSTRAINT FK_Digitales_Videojuegos;

ALTER TABLE DLCS DROP CONSTRAINT FK_DLCs_Videojuegos;

ALTER TABLE VIDEOJUEGOS DROP CONSTRAINT FK_Videojuegos_Plataformas;

ALTER TABLE VIDEOJUEGOS DROP CONSTRAINT FK_Videojuegos_CarritosCompras;

ALTER TABLE VIDEOJUEGOSPORCATEGORIAS DROP CONSTRAINT FK_VideojuegosPorCategoria_Videojuegos;

ALTER TABLE VIDEOJUEGOSPORCATEGORIAS DROP CONSTRAINT FK_VideojuegosPorCategoria_Categorias;

ALTER TABLE RECOMIENDAN DROP CONSTRAINT FK_Recomiendan_Usuario;

ALTER TABLE RECOMIENDAN DROP CONSTRAINT FK_Recomiendan_Videojuegos;

ALTER TABLE USUARIOS DROP CONSTRAINT FK_Usuarios_CarritosCompras;

ALTER TABLE USUARIOS DROP CONSTRAINT FK_Usuarios_Videojuegos;

ALTER TABLE ENVIOS DROP CONSTRAINT FK_Envios_CarritosCompras;

--PROCEDIMENTALES

ALTER TABLE FISICOS ADD CONSTRAINTS FK_Fisicos_Videojuegos
    FOREIGN KEY(Videojuego) REFERENCES VIDEOJUEGOS(V_id) ON DELETE CASCADE;

ALTER TABLE DIGITALES ADD CONSTRAINTS FK_Digitales_Videojuegos
    FOREIGN KEY(Videojuego) REFERENCES VIDEOJUEGOS(V_id) ON DELETE CASCADE;

ALTER TABLE DLCS ADD CONSTRAINTS FK_DLCs_Videojuegos
    FOREIGN KEY(Videojuego) REFERENCES VIDEOJUEGOS(V_id) ON DELETE SET NULL;

ALTER TABLE VIDEOJUEGOS ADD CONSTRAINTS FK_Videojuegos_Plataformas
    FOREIGN KEY(Plataforma) REFERENCES PLATAFORMAS(P_id) ON DELETE CASCADE;

ALTER TABLE VIDEOJUEGOS ADD CONSTRAINTS FK_Videojuegos_CarritosCompras
    FOREIGN KEY(CarritoCompra) REFERENCES CARRITOSCOMPRAS(CC_id) ON DELETE CASCADE;

ALTER TABLE VIDEOJUEGOSPORCATEGORIAS ADD CONSTRAINTS FK_VideojuegosPorCategoria_Videojuegos
    FOREIGN KEY(Videojuego) REFERENCES VIDEOJUEGOS(V_id) ON DELETE CASCADE;

ALTER TABLE VIDEOJUEGOSPORCATEGORIAS ADD CONSTRAINTS FK_VideojuegosPorCategoria_Categorias
    FOREIGN KEY(Categoria) REFERENCES CATEGORIAS(C_id) ON DELETE CASCADE;

ALTER TABLE RECOMIENDAN ADD CONSTRAINTS FK_Recomiendan_Usuario
    FOREIGN KEY(Usuario) REFERENCES USUARIOS(U_id) ON DELETE CASCADE;

ALTER TABLE RECOMIENDAN ADD CONSTRAINTS FK_Recomiendan_Videojuegos
    FOREIGN KEY(Videojuego) REFERENCES VIDEOJUEGOS(V_id) ON DELETE CASCADE;

ALTER TABLE USUARIOS ADD CONSTRAINTS FK_Usuarios_CarritosCompras
    FOREIGN KEY(CarritoCompra) REFERENCES CARRITOSCOMPRAS(CC_id) ON DELETE CASCADE;

ALTER TABLE USUARIOS ADD CONSTRAINTS FK_Usuarios_Videojuegos
    FOREIGN KEY(Videojuego) REFERENCES Videojuegos(V_id) ON DELETE CASCADE;

ALTER TABLE ENVIOS ADD CONSTRAINTS FK_Envios_CarritosCompras
    FOREIGN KEY(CarritoCompra) REFERENCES CARRITOSCOMPRAS(CC_id) ON DELETE SET NULL;